{
 "kind": "discovery#rpcDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/a5F4DDSApS7NfO-VNs0FxliPtQk\"",
 "discoveryVersion": "v1",
 "id": "empeeapi:v1",
 "name": "empeeapi",
 "version": "v1",
 "description": "This is an API",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://ezrtt.appspot.com/_ah/api/",
 "rpcUrl": "https://ezrtt.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "EmpDayInfo": {
   "id": "EmpDayInfo",
   "type": "object",
   "properties": {
    "dayOfWeek": {
     "type": "integer",
     "format": "int32"
    },
    "hourInfo": {
     "type": "array",
     "items": {
      "$ref": "EmpHourInfo"
     }
    }
   }
  },
  "EmpHourInfo": {
   "id": "EmpHourInfo",
   "type": "object",
   "properties": {
    "hourOfDay": {
     "type": "integer",
     "format": "int32"
    },
    "presences": {
     "type": "array",
     "items": {
      "type": "boolean"
     }
    },
    "samples": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "EmpLoc": {
   "id": "EmpLoc",
   "type": "object",
   "properties": {
    "empNum": {
     "type": "string"
    },
    "locdate": {
     "type": "string"
    },
    "ltln": {
     "$ref": "GeoPt"
    }
   }
  },
  "EmpWeekInfo": {
   "id": "EmpWeekInfo",
   "type": "object",
   "properties": {
    "dayInfo": {
     "type": "array",
     "items": {
      "$ref": "EmpDayInfo"
     }
    },
    "dayOfwkEnd": {
     "type": "integer",
     "format": "int32"
    },
    "dayOfwkStart": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "EmpWeekInfoCollection": {
   "id": "EmpWeekInfoCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "EmpWeekInfo"
     }
    }
   }
  },
  "Employee": {
   "id": "Employee",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "employername": {
     "type": "string"
    },
    "firstName": {
     "type": "string"
    },
    "inTime": {
     "type": "string"
    },
    "lastName": {
     "type": "string"
    },
    "mobile": {
     "type": "string"
    },
    "offAddress": {
     "$ref": "GeoPt"
    },
    "outTime": {
     "type": "string"
    },
    "status": {
     "type": "boolean"
    },
    "weekDayEnd": {
     "type": "integer",
     "format": "int32"
    },
    "weekDayStart": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "GeoPt": {
   "id": "GeoPt",
   "type": "object",
   "properties": {
    "latitude": {
     "type": "number",
     "format": "float"
    },
    "longitude": {
     "type": "number",
     "format": "float"
    }
   }
  },
  "Status": {
   "id": "Status",
   "type": "object",
   "properties": {
    "data": {
     "type": "string"
    },
    "emper": {
     "type": "boolean"
    },
    "emper_present": {
     "type": "boolean"
    },
    "updated": {
     "type": "boolean"
    }
   }
  }
 },
 "methods": {
  "empeeapi.getloc": {
   "id": "empeeapi.getloc",
   "allowGet": true,
   "parameters": {
    "employeenum": {
     "type": "string",
     "required": true
    },
    "fromdate": {
     "type": "string",
     "required": true
    },
    "todate": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "employeenum",
    "fromdate",
    "todate"
   ],
   "returns": {
    "$ref": "EmpWeekInfoCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "empeeapi.testdate": {
   "id": "empeeapi.testdate",
   "returns": {
    "$ref": "Status"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "empeeapi.updateloc": {
   "id": "empeeapi.updateloc",
   "parameters": {
    "resource": {
     "$ref": "EmpLoc"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "EmpLoc"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "empeeapi.verifyempee": {
   "id": "empeeapi.verifyempee",
   "parameters": {
    "emploeenum": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "emploeenum"
   ],
   "returns": {
    "$ref": "Employee"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
