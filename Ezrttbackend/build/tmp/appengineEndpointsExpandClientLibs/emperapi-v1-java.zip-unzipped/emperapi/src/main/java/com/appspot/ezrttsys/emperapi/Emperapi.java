/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-06 at 11:38:07 UTC 
 * Modify at your own risk.
 */

package com.appspot.ezrttsys.emperapi;

/**
 * Service definition for Emperapi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link EmperapiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Emperapi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the emperapi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://ezrttsys.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Emperapi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Emperapi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addemployee".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Addemployee#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.ezrttsys.emperapi.model.Employee}
   * @return the request
   */
  public Addemployee addemployee(com.appspot.ezrttsys.emperapi.model.Employee content) throws java.io.IOException {
    Addemployee result = new Addemployee(content);
    initialize(result);
    return result;
  }

  public class Addemployee extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.Employee> {

    private static final String REST_PATH = "emperapi/v1/addEmployee";

    /**
     * Create a request for the method "addemployee".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Addemployee#execute()} method to invoke the remote
     * operation. <p> {@link
     * Addemployee#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.ezrttsys.emperapi.model.Employee}
     * @since 1.13
     */
    protected Addemployee(com.appspot.ezrttsys.emperapi.model.Employee content) {
      super(Emperapi.this, "POST", REST_PATH, content, com.appspot.ezrttsys.emperapi.model.Employee.class);
    }

    @Override
    public Addemployee setAlt(java.lang.String alt) {
      return (Addemployee) super.setAlt(alt);
    }

    @Override
    public Addemployee setFields(java.lang.String fields) {
      return (Addemployee) super.setFields(fields);
    }

    @Override
    public Addemployee setKey(java.lang.String key) {
      return (Addemployee) super.setKey(key);
    }

    @Override
    public Addemployee setOauthToken(java.lang.String oauthToken) {
      return (Addemployee) super.setOauthToken(oauthToken);
    }

    @Override
    public Addemployee setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Addemployee) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Addemployee setQuotaUser(java.lang.String quotaUser) {
      return (Addemployee) super.setQuotaUser(quotaUser);
    }

    @Override
    public Addemployee setUserIp(java.lang.String userIp) {
      return (Addemployee) super.setUserIp(userIp);
    }

    @Override
    public Addemployee set(String parameterName, Object value) {
      return (Addemployee) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getallemployees".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Getallemployees#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Getallemployees getallemployees() throws java.io.IOException {
    Getallemployees result = new Getallemployees();
    initialize(result);
    return result;
  }

  public class Getallemployees extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.EmployeeCollection> {

    private static final String REST_PATH = "emperapi/v1/employeecollection";

    /**
     * Create a request for the method "getallemployees".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Getallemployees#execute()} method to invoke the remote
     * operation. <p> {@link Getallemployees#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected Getallemployees() {
      super(Emperapi.this, "GET", REST_PATH, null, com.appspot.ezrttsys.emperapi.model.EmployeeCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Getallemployees setAlt(java.lang.String alt) {
      return (Getallemployees) super.setAlt(alt);
    }

    @Override
    public Getallemployees setFields(java.lang.String fields) {
      return (Getallemployees) super.setFields(fields);
    }

    @Override
    public Getallemployees setKey(java.lang.String key) {
      return (Getallemployees) super.setKey(key);
    }

    @Override
    public Getallemployees setOauthToken(java.lang.String oauthToken) {
      return (Getallemployees) super.setOauthToken(oauthToken);
    }

    @Override
    public Getallemployees setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Getallemployees) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Getallemployees setQuotaUser(java.lang.String quotaUser) {
      return (Getallemployees) super.setQuotaUser(quotaUser);
    }

    @Override
    public Getallemployees setUserIp(java.lang.String userIp) {
      return (Getallemployees) super.setUserIp(userIp);
    }

    @Override
    public Getallemployees set(String parameterName, Object value) {
      return (Getallemployees) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getemperdetails".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Getemperdetails#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Getemperdetails getemperdetails() throws java.io.IOException {
    Getemperdetails result = new Getemperdetails();
    initialize(result);
    return result;
  }

  public class Getemperdetails extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.Employer> {

    private static final String REST_PATH = "emperapi/v1/emper/getdetails";

    /**
     * Create a request for the method "getemperdetails".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Getemperdetails#execute()} method to invoke the remote
     * operation. <p> {@link Getemperdetails#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected Getemperdetails() {
      super(Emperapi.this, "GET", REST_PATH, null, com.appspot.ezrttsys.emperapi.model.Employer.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Getemperdetails setAlt(java.lang.String alt) {
      return (Getemperdetails) super.setAlt(alt);
    }

    @Override
    public Getemperdetails setFields(java.lang.String fields) {
      return (Getemperdetails) super.setFields(fields);
    }

    @Override
    public Getemperdetails setKey(java.lang.String key) {
      return (Getemperdetails) super.setKey(key);
    }

    @Override
    public Getemperdetails setOauthToken(java.lang.String oauthToken) {
      return (Getemperdetails) super.setOauthToken(oauthToken);
    }

    @Override
    public Getemperdetails setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Getemperdetails) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Getemperdetails setQuotaUser(java.lang.String quotaUser) {
      return (Getemperdetails) super.setQuotaUser(quotaUser);
    }

    @Override
    public Getemperdetails setUserIp(java.lang.String userIp) {
      return (Getemperdetails) super.setUserIp(userIp);
    }

    @Override
    public Getemperdetails set(String parameterName, Object value) {
      return (Getemperdetails) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getloggeduser".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Getloggeduser#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Getloggeduser getloggeduser() throws java.io.IOException {
    Getloggeduser result = new Getloggeduser();
    initialize(result);
    return result;
  }

  public class Getloggeduser extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.Employer> {

    private static final String REST_PATH = "emperapi/v1/employer";

    /**
     * Create a request for the method "getloggeduser".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Getloggeduser#execute()} method to invoke the remote
     * operation. <p> {@link Getloggeduser#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected Getloggeduser() {
      super(Emperapi.this, "GET", REST_PATH, null, com.appspot.ezrttsys.emperapi.model.Employer.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Getloggeduser setAlt(java.lang.String alt) {
      return (Getloggeduser) super.setAlt(alt);
    }

    @Override
    public Getloggeduser setFields(java.lang.String fields) {
      return (Getloggeduser) super.setFields(fields);
    }

    @Override
    public Getloggeduser setKey(java.lang.String key) {
      return (Getloggeduser) super.setKey(key);
    }

    @Override
    public Getloggeduser setOauthToken(java.lang.String oauthToken) {
      return (Getloggeduser) super.setOauthToken(oauthToken);
    }

    @Override
    public Getloggeduser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Getloggeduser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Getloggeduser setQuotaUser(java.lang.String quotaUser) {
      return (Getloggeduser) super.setQuotaUser(quotaUser);
    }

    @Override
    public Getloggeduser setUserIp(java.lang.String userIp) {
      return (Getloggeduser) super.setUserIp(userIp);
    }

    @Override
    public Getloggeduser set(String parameterName, Object value) {
      return (Getloggeduser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "regemper".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Regemper#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.ezrttsys.emperapi.model.Employer}
   * @return the request
   */
  public Regemper regemper(com.appspot.ezrttsys.emperapi.model.Employer content) throws java.io.IOException {
    Regemper result = new Regemper(content);
    initialize(result);
    return result;
  }

  public class Regemper extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.Status> {

    private static final String REST_PATH = "emperapi/v1/regEmployer";

    /**
     * Create a request for the method "regemper".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Regemper#execute()} method to invoke the remote operation.
     * <p> {@link
     * Regemper#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.ezrttsys.emperapi.model.Employer}
     * @since 1.13
     */
    protected Regemper(com.appspot.ezrttsys.emperapi.model.Employer content) {
      super(Emperapi.this, "POST", REST_PATH, content, com.appspot.ezrttsys.emperapi.model.Status.class);
    }

    @Override
    public Regemper setAlt(java.lang.String alt) {
      return (Regemper) super.setAlt(alt);
    }

    @Override
    public Regemper setFields(java.lang.String fields) {
      return (Regemper) super.setFields(fields);
    }

    @Override
    public Regemper setKey(java.lang.String key) {
      return (Regemper) super.setKey(key);
    }

    @Override
    public Regemper setOauthToken(java.lang.String oauthToken) {
      return (Regemper) super.setOauthToken(oauthToken);
    }

    @Override
    public Regemper setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Regemper) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Regemper setQuotaUser(java.lang.String quotaUser) {
      return (Regemper) super.setQuotaUser(quotaUser);
    }

    @Override
    public Regemper setUserIp(java.lang.String userIp) {
      return (Regemper) super.setUserIp(userIp);
    }

    @Override
    public Regemper set(String parameterName, Object value) {
      return (Regemper) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "testapi".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Testapi#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Testapi testapi() throws java.io.IOException {
    Testapi result = new Testapi();
    initialize(result);
    return result;
  }

  public class Testapi extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.Status> {

    private static final String REST_PATH = "testapi";

    /**
     * Create a request for the method "testapi".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Testapi#execute()} method to invoke the remote operation.
     * <p> {@link
     * Testapi#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Testapi() {
      super(Emperapi.this, "GET", REST_PATH, null, com.appspot.ezrttsys.emperapi.model.Status.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Testapi setAlt(java.lang.String alt) {
      return (Testapi) super.setAlt(alt);
    }

    @Override
    public Testapi setFields(java.lang.String fields) {
      return (Testapi) super.setFields(fields);
    }

    @Override
    public Testapi setKey(java.lang.String key) {
      return (Testapi) super.setKey(key);
    }

    @Override
    public Testapi setOauthToken(java.lang.String oauthToken) {
      return (Testapi) super.setOauthToken(oauthToken);
    }

    @Override
    public Testapi setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Testapi) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Testapi setQuotaUser(java.lang.String quotaUser) {
      return (Testapi) super.setQuotaUser(quotaUser);
    }

    @Override
    public Testapi setUserIp(java.lang.String userIp) {
      return (Testapi) super.setUserIp(userIp);
    }

    @Override
    public Testapi set(String parameterName, Object value) {
      return (Testapi) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "viewreport".
   *
   * This request holds the parameters needed by the emperapi server.  After setting any optional
   * parameters, call the {@link Viewreport#execute()} method to invoke the remote operation.
   *
   * @param emploeenum
   * @param date
   * @return the request
   */
  public Viewreport viewreport(java.lang.String emploeenum, java.lang.String date) throws java.io.IOException {
    Viewreport result = new Viewreport(emploeenum, date);
    initialize(result);
    return result;
  }

  public class Viewreport extends EmperapiRequest<com.appspot.ezrttsys.emperapi.model.EmpWeekInfoCollection> {

    private static final String REST_PATH = "emperapi/v1/viewreport/{emploeenum}/{date}";

    /**
     * Create a request for the method "viewreport".
     *
     * This request holds the parameters needed by the the emperapi server.  After setting any
     * optional parameters, call the {@link Viewreport#execute()} method to invoke the remote
     * operation. <p> {@link
     * Viewreport#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param emploeenum
     * @param date
     * @since 1.13
     */
    protected Viewreport(java.lang.String emploeenum, java.lang.String date) {
      super(Emperapi.this, "POST", REST_PATH, null, com.appspot.ezrttsys.emperapi.model.EmpWeekInfoCollection.class);
      this.emploeenum = com.google.api.client.util.Preconditions.checkNotNull(emploeenum, "Required parameter emploeenum must be specified.");
      this.date = com.google.api.client.util.Preconditions.checkNotNull(date, "Required parameter date must be specified.");
    }

    @Override
    public Viewreport setAlt(java.lang.String alt) {
      return (Viewreport) super.setAlt(alt);
    }

    @Override
    public Viewreport setFields(java.lang.String fields) {
      return (Viewreport) super.setFields(fields);
    }

    @Override
    public Viewreport setKey(java.lang.String key) {
      return (Viewreport) super.setKey(key);
    }

    @Override
    public Viewreport setOauthToken(java.lang.String oauthToken) {
      return (Viewreport) super.setOauthToken(oauthToken);
    }

    @Override
    public Viewreport setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Viewreport) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Viewreport setQuotaUser(java.lang.String quotaUser) {
      return (Viewreport) super.setQuotaUser(quotaUser);
    }

    @Override
    public Viewreport setUserIp(java.lang.String userIp) {
      return (Viewreport) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String emploeenum;

    /**

     */
    public java.lang.String getEmploeenum() {
      return emploeenum;
    }

    public Viewreport setEmploeenum(java.lang.String emploeenum) {
      this.emploeenum = emploeenum;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String date;

    /**

     */
    public java.lang.String getDate() {
      return date;
    }

    public Viewreport setDate(java.lang.String date) {
      this.date = date;
      return this;
    }

    @Override
    public Viewreport set(String parameterName, Object value) {
      return (Viewreport) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Emperapi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Emperapi}. */
    @Override
    public Emperapi build() {
      return new Emperapi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link EmperapiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setEmperapiRequestInitializer(
        EmperapiRequestInitializer emperapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(emperapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
